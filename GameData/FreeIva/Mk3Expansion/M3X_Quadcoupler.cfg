@PART[M3X_Quadcoupler]:HAS[!MODULE[ModuleFreeIva]]:AFTER[Mk3Expansion]:NEEDS[Reviva&B9PartSwitch]
{
	// when KSP loads the part, it splits these keys by underscore and only takes the 3rd token.
	// So, the part ends up with 3 attachnodes named "bottom" and we can't tell hatches which one they belong to
	// further note: the attachnode names need to match the ones used in adapterLargeSmallQuad because we're cloning the INTERNAL node here
	node_stack_bottom01 = #$node_stack_bottom_01$
	node_stack_bottom02 = #$node_stack_bottom_02$
	node_stack_bottom03 = #$node_stack_bottom_03$
	node_stack_bottom04 = #$node_stack_bottom_04$
	-node_stack_bottom_01 = delete
	-node_stack_bottom_02 = delete
	-node_stack_bottom_03 = delete
	-node_stack_bottom_04 = delete

	MODULE
	{
		name = ModuleFreeIva
	}

	MODULE
	{
		name = ModuleIVASwitch
		internalName = FreeIva_Empty_Internal
	}

	INTERNAL
	{
		name = FreeIva_Empty_Internal
	}

	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelSwitch]]
	{
		@SUBTYPE:HAS[~tankType],*
		{
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = FreeIva_M3X_Quadcoupler_IVA
				}
			}
		}

		@SUBTYPE:HAS[#tankType],*
		{
			MODULE
			{
				IDENTIFIER
				{
					name = ModuleIVASwitch
				}
				DATA
				{
					internalName = FreeIva_Empty_Internal
				}
			}
		}
	}
}

// this is a copy of the one from stock, but needs an offset
+INTERNAL[FreeIva_adapterLargeSmallQuad_Internal]:NEEDS[Mk3Expansion&Reviva]
{
	@name = FreeIva_M3X_Quadcoupler_IVA
	offset = 0,0,-0.8
}